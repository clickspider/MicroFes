"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultConsole = exports.SerializedConsole = void 0;
const utils_1 = require("./utils");
class SerializedConsoleImpl {
    constructor(_console) {
        this._console = _console;
        this._activeOutput = false;
        this._outputBuffer = [];
        this.finished = utils_1.defer();
    }
    activeOutput() {
        this._activeOutput = true;
        this._outputBuffer.forEach(line => {
            if (line.type === 'stdout')
                this._console.log(line.line);
            else
                this._console.error(line.line);
        });
        this._outputBuffer = [];
    }
    log(msg) {
        if (this._activeOutput)
            this._console.log(msg);
        else
            this._outputBuffer.push({ type: 'stdout', line: msg });
    }
    error(msg) {
        if (this._activeOutput)
            this._console.error(msg);
        else
            this._outputBuffer.push({ type: 'stderr', line: msg });
    }
}
class SerializedConsole {
    constructor(_console) {
        this._console = _console;
        this._list = [];
    }
    _start(c) {
        this._active = c;
        this._active.activeOutput();
        this._active.finished.promise.then(() => {
            this._active = undefined;
            let next = this._list.shift();
            if (next) {
                this._start(next);
            }
        });
    }
    create() {
        let c = new SerializedConsoleImpl(this._console);
        if (!this._active) {
            this._start(c);
        }
        else {
            this._list.push(c);
        }
        return c;
    }
    done(c) {
        ;
        c.finished.resolve();
    }
}
exports.SerializedConsole = SerializedConsole;
class DefaultConsole {
    create() {
        return console;
    }
    done(c) { }
}
exports.DefaultConsole = DefaultConsole;
//# sourceMappingURL=console.js.map